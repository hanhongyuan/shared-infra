---
# Quick n dirty swagger spect.  rushing to hack something together to achieve a larger goal.  it ain't prettyd  
swagger: "2.0"
info:
  description: JRA Infra API
  version: 1.0.0
  title: JRA Infra API
host: joericearchitegct.com
basePath: /infra-api
schemes:
- http

paths:

  # Each Path Item Object describes a resource, containing a set of operations
  # at a specified path.  The Path Item object can define parameters and 
  # responses common all of its contained operations.
  /environments:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 0 - Environment
      description: retrieves and searches through a list of environments
      operationId: getEnvironments
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: environmentType
        in: query
        description: filter field on environment type
        required: false
        type: string
      - name: name
        in: query
        description: <@TODO> - Add Description
        required: false
        type: string
      - name: environmentStatus
        in: query
        description: <@TODO> - Add Description
        required: false
        type: string
      - name: environmentDurabilityType
        in: query
        description: <@TODO> - Add Description
        required: false
        type: string
      responses:
        200:
          description: Successful response, with a representation of the list of matching environments.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/EnvironmentList"
          examples:
            # Example message, keyed by media type
            application/json :
              [
              ] 
        404:
          description: The requested environments were not found

  # @TODO - Document
  /environments/{environmentCanonicalId}:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 0 - Environment
      description: <@TODO> - Add Description
      operationId: getEnvironmentDetails
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: environmentCanonicalId
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/EnvironmentDetails"
          examples:
            # Example message, keyed by media type
            application/json :
              {
              }
        404:
          description: The requested tax filing was not found.

  # @TODO - Document
  /container-clusters:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 1 - Container Cluster
      - Container Clusters
      description: <@TODO> - Add Description
      operationId: getContainerClusters
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: YYY
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ContainerClusterList"
          examples:
            # Example message, keyed by media type
            application/json :
              [
              ]
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /container-clusters/{containerClusterCanonicalId}:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 1 - Container Cluster
      - Container Clusters
      description: <@TODO> - Add Description
      operationId: getContainerCluster
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: containerClusterCanonicalId
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ContainerClusterDetails"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /container-cluster-nodes:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 1 - Container Cluster
      - Container Nodes
      description: <@TODO> - Add Description
      operationId: getContainerClusterNodeList
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: YYY
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ContainerClusterNodeList"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /container-cluster-nodes/{containerNodeCanonicalId}:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 1 - Container Cluster
      - Container Nodes
      description: <@TODO> - Add Description
      operationId: getContainerNodeDetails
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: containerNodeCanonicalId
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ContainerClusterNodeDetails"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /containers:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 1 - Container Cluster
      - Containers
      description: <@TODO> - Add Description
      operationId: getContainerList
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: YYY
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ContainerList"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /containers/{containerCanonicalId}:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 1 - Container Cluster
      - Containers
      description: <@TODO> - Add Description
      operationId: getContainerDetails
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: containerCanonicalId
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ContainerDetails"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /application-groups:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 2 - Application
      - Application Groups
      description: <@TODO> - Add Description
      operationId: getApplicationGroupList
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: YYY
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ApplicationGroupList"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /application-groups/{applicationGroupCanonicalId}:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 2 - Application
      - Application Groups
      description: <@TODO> - Add Description
      operationId: getApplicationGroupDetails
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: applicationGroupCanonicalId
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ApplicationGroupDetails"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /applications:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 2 - Application
      - Applications
      description: <@TODO> - Add Description
      operationId: getApplicationList
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: YYY
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ApplicationList"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /applications/{applicationCanonicalId}:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 2 - Application
      - Applications
      description: <@TODO> - Add Description
      operationId: getApplicationDetails
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: applicationCanonicalId
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ApplicationDetails"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /application-services:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 2 - Application
      - Application Services
      description: <@TODO> - Add Description
      operationId: getApplicationServiceList
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: YYY
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ApplicationServiceList"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /application-services/{applicationServiceCanonicalId}:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 2 - Application
      - Application Services
      description: <@TODO> - Add Description
      operationId: getApplicationServiceDetails
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: applicationServiceCanonicalId
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/ApplicationServiceDetails"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /infrastructure-resources:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 3 - Infrastructure
      - Infrastructure Resources
      description: <@TODO> - Add Description
      operationId: getInfrastructureResourceList
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: YYY
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/InfrastructureResourceList"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

  # @TODO - Document
  /infrastructure-resources/{infrastructureResourcesCanonicalId}:

    # Operations are identified by an HTTP method.  
    get:
      tags:
      - 3 - Infrastructure
      - Infrastructure Resources
      description: <@TODO> - Add Description
      operationId: getInfrastructureResourceDetails
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: infrastructureResourcesCanonicalId
        in: path
        description: <@TODO> - Add Description
        required: true
        type: string
      responses:
        200:
          description: Successful response, with details about an environment.
          schema:
            # Reference to a Schema Object described in 'definitions' section
            $ref: "#/definitions/InfrastructureResourceDetails"
          examples:
            # Example message, keyed by media type
            application/json :
              [
                {
                }
              ] 
        404:
          description: <@TODO> - Add Description

# The definitions section contains a set of named Schema Objects.  Each schema
# object describes a reusable data type, which can be reference by name.
definitions:
  EnvironmentSummary:
    type: object
    description: An summary of the environment meant to returned in collection.
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type: string
      displayName:
        type: string
      description:
        type: string
        enum: ["active", "stopped", "terminated"]
      environmentType:
        type: string
        enum: ["latest", "stage", "functional-test", "integration-test", "qa-automated", "qa-manual", "production", "shadow", "performance", "uat"]
      environmentDurabilityType:
        type: string
        enum: ["fixed", "disposable", "short-term"]
      environmentSize:
        type: string
        enum: ["small", "large", "high-availability"]
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      links:
        $ref: '#/definitions/Links' 

  EnvironmentList:
    type: object
    properties:
      totalCount:
        type: number
      currentOffset:
        type: number
      currentLimit:
        type: number
      items:
        type: array
        items:
          $ref: '#/definitions/EnvironmentSummary'
      links:
        $ref: '#/definitions/Links' 

  Collection:
    type: object
    

  EnvironmentDetails:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type: string
      displayName:
        type: string
      description:
        type: string
      environmentStatus:
        type: string
        enum: ["active", "stopped", "terminated"]
      environmentType:
        type: string
        enum: ["latest", "stage", "functional-test", "integration-test", "qa-automated", "qa-manual", "production", "shadow", "performance", "uat"]
      environmentSize:
        type: string
        enum: ["small", "large", "high-availability"]
      environmentDurabilityType:
        type: string
        enum: ["fixed", "disposable", "short-term"]
      metaDataInformation:
        type: object
        properties: 
          sourceInfo:
            type: object
            properties:
              aws:
                type: object
                properties:
                  dataSource:
                     $ref: '#/definitions/DataSource'
                  regions:
                    $ref: '#/definitions/AwsRegionInfoList'
                  peerVpcs:
                    $ref: '#/definitions/AwsRegionInfoList'
          publishedPortsAndUrls:
            type: object
            additionalProperties:
              type: array
              # key is the cluster id.  The map contains a set of publish ports for each cluster.
              items:
                $ref: '#/definitions/PublishedUrlList'
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      resources:
        type: object
        properties:
          childResources:
            type: object
            properties:
              containerClusters:
                $ref: '#/definitions/ContainerClusterList' 
              containerClusterNodes:
                $ref: '#/definitions/ContainerClusterNodeList'
              applicationGroups:
                $ref: '#/definitions/ApplicationGroupList'
              applications:
                $ref: '#/definitions/ApplicationList'
              applicationServices:
                $ref: '#/definitions/ApplicationServiceList'
              containers:
                type: object
                properties:
                  dockerEngineContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
                  dockerSwarmServiceContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
              infrastructureResources:
                $ref: '#/definitions/InfrastructureResourceList' 

      links:
        $ref: '#/definitions/Links' 

  ContainerClusterSummary:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type: string
        description: <@TODO> - Add Description
      displayName:
        type: string
      description:
        $ref: '#/definitions/Identifier' 
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      links:
        $ref: '#/definitions/Links' 

  ContainerClusterDetails:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type: string 
      displayName:
        type: string
      description:
        $ref: '#/definitions/Identifier'
      metaDataInformation:
        type: object
        properties: 
          sourceInfo:
            type: object
            properties:
              aws:
                type: object
                properties:
                  dataSource:
                     $ref: '#/definitions/DataSource'
                  regions:
                    $ref: '#/definitions/AwsRegionInfoList'
                     
              jraInfra:
                $ref: '#/definitions/JraInfraInfo'
              dockerSwarm:
                type:  object
                properties:  
                  clusterAdvertiseAddress:
                    type: string
                  clusterListenAddress:
                    type: string
                  managerJoinToken:
                    type: string
                  workerJoinToken:
                    type: string
          publishedPortsAndUrls:
            $ref: '#/definitions/PublishedUrlList'
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      resources:
        type: object
        properties:
          parentResources:
            type: object
            properties:
              environment:
                $ref: '#/definitions/EnvironmentSummary'
          childResources:
            type: object
            properties:
              containerClusterNodes:
                $ref: '#/definitions/ContainerClusterNodeList'
              applicationGroups:
                $ref: '#/definitions/ApplicationGroupList'
              applications:
                $ref: '#/definitions/ApplicationList'
              applicationServices:
                $ref: '#/definitions/ApplicationServiceList'
              containers:
                type: object
                properties:
                  dockerEngineContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
                  dockerSwarmServiceContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
              infrastructureResources:
                $ref: '#/definitions/InfrastructureResourceList'
      links:
        $ref: '#/definitions/Links' 
    required: 
      - id



  ContainerClusterList:
    type: object
    properties:
      totalCount:
        type: number
      currentOffset:
        type: number
      currentLimit:
        type: number
      items:
        type: array
        items:
          $ref: '#/definitions/ContainerClusterSummary'
      links:
        $ref: '#/definitions/Links' 

  ContainerClusterNodeSummary:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        $ref: '#/definitions/Identifier' 
      metaDataInformation:
        type: object
        properties: 
          machineInfo:
            $ref: '#/definitions/MachineInfo' 
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      links:
        $ref: '#/definitions/Links' 

  ContainerClusterNodeDetails:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        $ref: '#/definitions/Identifier'
      metaDataInformation:
        type: object
        properties: 
          machineInfo:
            $ref: '#/definitions/MachineInfo' 
          sourceInfo:
            type: object
            properties:
              aws:
                type: object
                properties:
                  dataSource:
                     $ref: '#/definitions/DataSource'
                  regionId:
                    type: string
                  instanceInfo:
                    $ref: '#/definitions/AwsInstanceInfo'
                  vpcInfo:
                    $ref: '#/definitions/AwsVpcInfo'
                  availabilityZone:
                    $ref: '#/definitions/AwsAvailabilityZoneInfo' 
                  subnet:
                    $ref: '#/definitions/AwsSubnetInfo'
                  systemStats:
                    $ref: '#/definitions/SystemStats'
              dockerEngine:
                type: object
                properties:
                  dataSource:
                     $ref: '#/definitions/DataSource'
                  dockerEngineId:
                     type:  string
                  dockerEngineName:
                     type:  string
                  dockerEngineContainers:
                     $ref: '#/definitions/ContainersInfoSummary'
                  systemStatus:
                     type:  string
                  systemTime:
                     type:  string
                     format: date-time
                  systemStats:
                    $ref: '#/definitions/SystemStats'
                  dockerRootDir:
                     type:  string
                  httpProxy:
                     type:  string
                  httpsProxy:
                     type:  string
                  noProxy:
                     type:  string
                  experimentalBuild:
                     type:  boolean
                  serverVersion:
                     type:  string
                  labels:
                     $ref: '#/definitions/Labels'
                  links:
                    $ref: '#/definitions/Links' 
              jraInfra:
                $ref: '#/definitions/JraInfraInfo'
              dockerSwarm:
                type:  object
                properties:  
                  dockerSwarmNodeId:
                    type:  string
                  dockerSwarmNodeName:
                    type:  string
                  swarmRole:
                    type:  string
                    enum: ['manager', 'worker']
                  hostname:
                    type:  string
                  timestampCreated:
                    type:  string
                    format: date-time
                  timestampLastModified:
                    type:  string
                    format: date-time
                  status:
                    type:  object
                    properties:
                      state:
                        type: string
                      availability:
                        type: string
                      address:
                        type:  string
                  managerStatus:
                    type:  object
                    properties:
                      leader:
                        type: string
                      reachability:
                        type: string
                      address:
                        type: string
                  systemStats:
                    $ref: '#/definitions/SystemStats'
                  labels:
                     $ref: '#/definitions/Labels'
                  links:
                    $ref: '#/definitions/Links' 
          publishedPortsAndUrls:
            $ref: '#/definitions/PublishedUrlList'
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      resources:
        type: object
        properties:
          parentResources:
            type: object
            properties:
              environment:
                $ref: '#/definitions/EnvironmentSummary'
              containerClusters=:
                $ref: '#/definitions/ContainerClusterSummary' 
          childResources:
            type: object
            properties:
              containers:
                type: object
                properties:
                  dockerEngineContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
                  dockerSwarmServiceContainers:
                    type: object
                    $ref: '#/definitions/ContainerList' 
          containsResources:
            type: object
            properties:
              applicationGroups:
                $ref: '#/definitions/ApplicationGroupList'
              applications:
                $ref: '#/definitions/ApplicationList'
              applicationServices:
                $ref: '#/definitions/ApplicationServiceList'
              infrastructureResources:
                $ref: '#/definitions/InfrastructureResourceList'
      links:
        $ref: '#/definitions/Links'

  MachineInfo:
        type: object
        properties:
          networkInfo:
            $ref: '#/definitions/NetworkInfo' 
          systemStats:
            $ref: '#/definitions/SystemStats'

  ContainerClusterNodeList:
    type: object
    properties:
      totalCount:
        type: number
      currentOffset:
        type: number
      currentLimit:
        type: number
      items:
        type: array
        items:
          $ref: '#/definitions/ContainerClusterNodeSummary'
      links:
        $ref: '#/definitions/Links' 

  ContainerSummary:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        $ref: '#/definitions/Identifier' 
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      links:
        $ref: '#/definitions/Links' 

  ContainerDetails:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        type:  string
      metaDataInformation:
        type: object
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      resources:
        type: object
        properties:
          childResources:
            type: object
          parentResources:
            type: object
          runningOnResources:
            type: object
      links:
        $ref: '#/definitions/Links' 

  ContainerList:
    type: object
    properties:
      totalCount:
        type: number
      currentOffset:
        type: number
      currentLimit:
        type: number
      items:
        type: array
        items:
          $ref: '#/definitions/ContainerSummary'
      links:
        $ref: '#/definitions/Links' 

  ApplicationGroupSummary:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        type:  string
      metaDataInformation:
        type: object
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      links:
        $ref: '#/definitions/Links' 

  ApplicationGroupDetails:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        type:  string
      metaDataInformation:
        type: object
        properties:  
          sourceInfo:
            type: object
            properties:
              jraInfra:
                $ref: '#/definitions/JraInfraInfo'
              dockerSwarm:
                type:  object
                properties:  
                  dataSource:
                     $ref: '#/definitions/DataSource'
                  dockerSwarmNetworks:
                     $ref: '#/definitions/DockerSwarmNetworkList'
                  links:
                    $ref: '#/definitions/Links' 
          publishedPortsAndUrls:
            $ref: '#/definitions/PublishedUrlList'
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      resources:
        type: object
        properties:
          parentResources:
            type: object
            properties: 
              environment:
                $ref: '#/definitions/EnvironmentSummary'
              containerCluster:
                $ref: '#/definitions/ContainerClusterSummary' 
          childResources:
            type: object
            properties: 
              applications:
                type: object
                $ref: '#/definitions/ApplicationList'
              applicationServices:
                type: object
                $ref: '#/definitions/ApplicationServiceList'
              infrastructureResources:
                $ref: '#/definitions/InfrastructureResourceList' 
          runningOnResources:
            type: object
            properties: 
              containerClusterNodes:
                $ref: '#/definitions/ContainerClusterNodeList'
              containers:
                type: object
                properties:
                  dockerEngineContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
                  dockerSwarmServiceContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
      links:
        $ref: '#/definitions/Links' 

  ApplicationGroupList:
    type: object
    properties:
      totalCount:
        type: number
      currentOffset:
        type: number
      currentLimit:
        type: number
      items:
        type: array
        items:
          $ref: '#/definitions/ApplicationGroupSummary'
      links:
        $ref: '#/definitions/Links' 

  ApplicationSummary:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        type:  string 
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      links:
        $ref: '#/definitions/Links' 

  ApplicationDetails:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        type:  string 
      metaDataInformation:
        type: object
        properties:  
          sourceInfo:
            type: object
            properties:
              jraInfra:
                $ref: '#/definitions/JraInfraInfo'
              dockerSwarm:
                type:  object
                properties:  
                  dataSource:
                     $ref: '#/definitions/DataSource'
                  dockerSwarmNetworks:
                     $ref: '#/definitions/DockerSwarmNetworkList'
                  links:
                    $ref: '#/definitions/Links' 
          publishedPortsAndUrls:
            $ref: '#/definitions/PublishedUrlList'
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      resources:
        type: object
        properties:
          parentResources:
            type: object
            properties:
              environment:
                $ref: '#/definitions/EnvironmentSummary'
              containerCluster:
                $ref: '#/definitions/ContainerClusterSummary' 
              applicationGroups:
                $ref: '#/definitions/ApplicationGroupList'
          childResources:
            type: object
            properties:
              applicationServices:
                type: object
                $ref: '#/definitions/ApplicationServiceList'
              infrastructureResources:
                $ref: '#/definitions/InfrastructureResourceList' 
          runningOnResources:
            type: object
            properties:
              containerClusterNodes:
                $ref: '#/definitions/ContainerClusterNodeList'
              containers:
                type: object
                properties:
                  dockerEngineContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
                  dockerSwarmServiceContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
      links:
        $ref: '#/definitions/Links' 

  ApplicationList:
    type: object
    properties:
      totalCount:
        type: number
      currentOffset:
        type: number
      currentLimit:
        type: number
      items:
        type: array
        items:
          $ref: '#/definitions/ApplicationSummary'
      links:
        $ref: '#/definitions/Links' 

  ApplicationServiceSummary:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        type:  string 
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      links:
        $ref: '#/definitions/Links' 

  ApplicationServiceDetails:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        type:  string 
      metaDataInformation:
        type: object
        properties:  
          sourceInfo:
            type: object
            properties:
              jraInfra:
                $ref: '#/definitions/JraInfraInfo'
              dockerSwarm:
                type:  object
                properties:  
                  dataSource:
                     $ref: '#/definitions/DataSource'
                  dockerSwarmServiceId:
                    type:  string
                  dockerSwarmServiceDisplayId:
                    type:  string
                  dockerSwarmServiceName:
                    type:  string
                  timestampCreated:
                    type:  string
                    format: date-time
                  timestampLastModified:
                    type:  string
                    format: date-time
                  version:
                    type: object
                    properties:
                      index:
                        type: number
                  labels:
                     $ref: '#/definitions/Labels'
                  links:
                    $ref: '#/definitions/Links' 
                  
          publishedPortsAndUrls:
            $ref: '#/definitions/PublishedUrlList'
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      resources:
        type: object
        properties:
          parentResources:
            type: object
            properties:
              environment:
                $ref: '#/definitions/EnvironmentSummary'
              containerCluster:
                $ref: '#/definitions/ContainerClusterSummary' 
              applicationGroups:
                $ref: '#/definitions/ApplicationGroupList'
              application:
                type: object
                $ref: '#/definitions/ApplicationSummary'
          childResources:
            type: object
            properties:
              infrastructureResource:
                $ref: '#/definitions/InfrastructureResourceSummary' 
          runningOnResources:
            type: object
            properties:
              containerClusterNodes:
                $ref: '#/definitions/ContainerClusterNodeList'
              containers:
                type: object
                properties:
                  dockerEngineContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
                  dockerSwarmServiceContainers:
                    type: object
                    $ref: '#/definitions/ContainerList'
      links:
        $ref: '#/definitions/Links' 

  ApplicationServiceList:
    type: object
    properties:
      totalCount:
        type: number
      currentOffset:
        type: number
      currentLimit:
        type: number
      items:
        type: array
        items:
          $ref: '#/definitions/ApplicationServiceSummary' 
      links:
        $ref: '#/definitions/Links' 
      
  InfrastructureResourceSummary:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        type:  string 
      links:
        $ref: '#/definitions/Links' 
      
  InfrastructureResourceDetails:
    type: object
    description: <@TODO> - Add Description
    properties:
      id:
        $ref: '#/definitions/Identifier' 
        description: <@TODO> - Add Description
      name:
        type:  string
        description: <@TODO> - Add Description
      displayName:
        type:  string
        description: <@TODO> - Add Description
      description:
        type:  string 
      metaDataInformation:
        type: object
      statusInformation:
        $ref: '#/definitions/ResourceStatusInformation'
      resources:
        type: object
      links:
        $ref: '#/definitions/Links' 
      
  InfrastructureResourceList:
    type: object
    properties:
      totalCount:
        type: number
      currentOffset:
        type: number
      currentLimit:
        type: number
      items:
        type: array
        items:
          $ref: '#/definitions/InfrastructureResourceSummary'
      links:
        $ref: '#/definitions/Links' 
      
  Identifier:
    type: object
    properties:
      canonicalId:
        type: string
      displayId:
        type: string
      alternateIds:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            idSource:
              $ref: '#/definitions/DataSource'
            idName:
              type: string

  HealthStatusInfo: 
    type: object

  AlertInfo: 
    type: object
    
  ResourceStateInfo:
    type:  object
    properties:
      currentState:
        $ref: '#/definitions/StateDetails'
      stateChangeHistory:
        type: array
        items:
          type: object
          properties:
            timestampStateChanged:
              type: string
              format: date-time
            stateChangeAuditEvent:
              $ref: '#/definitions/AuditEvent'
            fromState:
              $ref: '#/definitions/StateDetails'
            toState:
              $ref: '#/definitions/StateDetails'
        
      
  StateDetails:
    type: object
    properties:
      state:
        type: string
        enum: ['active', 'paused', 'error', 'warning', 'stopped', 'disabled', 'terminated']
      stateCategory:
        type: string
        enum: ['active', 'inactive']
      errors:
        type: array
        items:
          type: string
      warnings:
        type: array
        items:
          type: string
      timestampStateEntered:
        type: string
        format: date-time

  AuditInfo:
    type: object
    properties:
      timestampCreated:
        type: string
        format: dateTime
      createdByUserName:
        type: string
      timestampStarted:
        type: string
        format: dateTime
      startedByUserName:
        type: string
      timestampEnded:
        type: string
        format: dateTime
      endedByUserName:
        type: string
      timestampLastModified:
        type: string
        format: dateTime
      lastModifiedByUserName:
        type: string
      timestampTerminated:
        type: string
        format: dateTime
      terminatedByUserName:
        type: string
      auditEventCountTotal:
        type: integer
      auditEventCountMostRecent:
        type: integer
      mostRecentAuditEvents:
        type: array
        items:
          $ref: '#/definitions/AuditEvent'
          
  DataSource:
    type: string
    enum: ['aws', 'docker-engine', 'docker-swarm', 'config-consul', 'jra']
            
  AuditEvent:
    type: object
    properties:
      eventTimestamp:
        type: string
        format: dateTime
      userName:
        type: string
      eventId:
        type: string
      eventName:
        type: string
      resourcesReferenced:
        type: object
        properties:
          resourceName:
            type: string
          resourceId:
            type: string
          resourceType:
            type: string
      eventType:
        type: string
      eventSource:
        $ref: '#/definitions/DataSource'
      eventContext:
        $ref: '#/definitions/EventContext'
      relatedAuditEvents:
        type: object
        properties:
          triggeredByAuditEvents:
            type: array
            items:
              $ref: '#/definitions/AuditEvent'
          downstreamAuditEvents:
            type: array
            items:
              $ref: '#/definitions/AuditEvent'

  EventContext:
    type: object
    properties:
      contextMessages:
        type: array
        items:
          type: string
      contextData:
        type: array
        items:
          $ref: '#/definitions/ContextDataKeyValuePair'
          
  KeyValuePair:
    type: object
    properties:
      key:
        type: string
      value:
        type: object

  ContextDataKeyValuePair:
    type: object
    properties:
      key:
        type: string
      value:
        type: object
      logLevel:
        type: string
        enum: ['info', 'debug', 'error', 'warn', 'trace']
  
  Link:
    type: object
    properties:
      href:
        type: string
        format: uri
        example: https://api.example.com/sales-orders/10101058747628

  Links:
    type: object
    description: |
      Values can be either a single Link or an array of Links
      See https://docs.pennybags.zalan.do/ for more.
    additionalProperties:
      # keys are link relations
      type: array
      items:
        $ref: '#/definitions/Link'
    example:
      'self':
        - href: https://api.example.com/sales-orders/10101058747628
        
  SystemStats:
    type: object
    properties:
      systemType:
        type: string
        enum: ['machine-physical', 'machine-vm', 'machine-vm-cloud', 'docker-engine', 'docker-swarm-node', 'container', 'jvm', 'node-process']
        
      osInfo:
        type: object
        properties:
          kernelVersion:
            type: string
          operatingSystem:
            type: string
          oSType:
            type: string
          architecture:
            type: string
      memoryInfo:
        type: object
        properties: 
          primaryStats:
            $ref: '#/definitions/FreeAndUsedStats'
          statsByType:
            type: array
            items:
              $ref: '#/definitions/FreeAndUsedStats'
      cpuInfo:
        type: object
        properties:
          cpuCoreCount:
            type:  number
          primaryStats:
            $ref: '#/definitions/FreeAndUsedStats'
          statsByType:
            type: array
            items:
              $ref: '#/definitions/FreeAndUsedStats'
      threadInfo:
        type: object
        properties:
          primaryStats:
            $ref: '#/definitions/FreeAndUsedStats'
          statsByType:
            type: array
            items:
              $ref: '#/definitions/FreeAndUsedStats'
      diskInfo:
        type: object
        properties:
          primaryStats:
            $ref: '#/definitions/FreeAndUsedStats'
          statsByType:
            type: array
            items:
              $ref: '#/definitions/FreeAndUsedStats'
            
            
  FreeAndUsedStats:
    type: object
    properties:
      type:
        type:  string
      dataSource:
        $ref: '#/definitions/DataSource'
      totalAmountAllocated:
        type: number
      totalAmountAllocatedDisplay:
        type: string
      amountFree:
        type: number
      amountFreeDisplay:
        type: string
      amountUsed:
        type: number
      amountUsedDisplay:
        type: string
      activeCount:
        type: number
      idleCount:
        type: number
      percentFree:
        type: number
      percentUsed:
        type: number
      unitOfMesaure:
        type: string
        enum: ['bytes', 'kb', 'mb',gb', 'tb', 'percent', 'count']
      timestampLastMeasured:
        type: string
        format: dateTime
      
  NetworkInfo:
    type: object
    properties:
      publicIpAddress:
        type: string
      publicDnsName:
        type:  string
      privateIpAddress:
        type:  string
      privateDnsName:
        type:  string
        
  Labels:
    type: object
    additionalProperties:
      type: string
        
  ContainersInfoSummary:
    type: object
    properties:
      containerCountTotal:
        type: number
      containerCountRunning:
        type: number
      containerCountPaused:
        type: number
      containerCountStopped:
        type: number
      runningContainers:
        type: array
        items:
          $ref: '#/definitions/ContainerQuickInfo'
      pausedContainers:
        type: array
        items:
          $ref: '#/definitions/ContainerQuickInfo'
      stoppedContainers:
        type: array
        items:
          $ref: '#/definitions/ContainerQuickInfo'
          
  ContainerQuickInfo:
    type: object
    properties:
      containerId:
        type:  string
      containerName:
        type:  string
      status:
        type:  string
        
  JraInfraInfo:
    type: object
    properties:
      environment:
        $ref: '#/definitions/EnvironmentSummary'
      containerCluster:
        $ref: '#/definitions/ContainerClusterSummary'
      failureZone:
        type:  string
      failureZones:
        type:  array
        items:
          type:  string
      swarmNodeType:
        type:  string
      swarmNodeTypes:
        type:  array
        items:
          type:  string
      loggingTag:
        type:  string
      swarmInstanceType:
        type:  string
      subnetType:
        type:  string
      labels:
        $ref: '#/definitions/Labels'
      
  PublishedUrlList:
    type: array
    items:
      type: object
      properties:
        publishedPort:
          type: number
        containerPort:
          type: number
        applicationName:
          type: string
        applicationDisplayName:
          type: string
        applicationId:
          type: string
        serviceName:
          type: string
        serviceDisplayName:
          type: string
        serviceId:
          type: string
        pathContext:
          type: string
        proxyRoutingPathContext:
          type: string
        proxyDomainName:
          type: string
        urls:
          $ref: '#/definitions/UrlInfoList'

  UrlInfoList:
    type: array
    items:
      $ref: '#/definitions/UrlInfo'

  UrlInfo:
    type: object
    properties:
      urlName:
        type: string
      urlType:
        type: string
      urlPath:
        type: string

  AwsRegionInfoList:
    type: array
    items:
      $ref: '#/definitions/AwsRegionInfo'

  AwsRegionInfo:
    type: object
    properties:
      regionId:
        type: string
      vpcInfo:
        $ref: '#/definitions/AwsVpcInfo'
      availabilityZones:
        $ref: '#/definitions/AwsAvailabilityZoneInfoList'
        
  AwsAvailabilityZoneInfoList:
    type: array
    items:
      $ref: '#/definitions/AwsAvailabilityZoneInfo'

  AwsVpcInfo:
    type: object
    properties:
      vpcId:
         type:  string
      vpcState:
         type:  string
      cidrBlock:
         type:  string
      isDefault:
         type:  boolean
      labels:
         $ref: '#/definitions/Labels'
      links:
        $ref: '#/definitions/Links' 
        
  AwsAvailabilityZoneInfo:
    type: object
    properties:
      availabilityZoneId:
         type:  string
      availabilityZoneName:
         type:  string
      cidrBlock:
         type:  string
      subnets:
        $ref: '#/definitions/AwsSubnetInfoList'
      labels:
         $ref: '#/definitions/Labels'
      links:
        $ref: '#/definitions/Links' 
        
  AwsSubnetInfo:
     type:  object
     properties:
       subnetId:
         type: string
       subnetName:
         type: string
       isPublic:
         type: boolean
       isPrivate:
         type: boolean
       labels:
         $ref: '#/definitions/Labels'
       links:
         $ref: '#/definitions/Links' 
     

  AwsSubnetInfoList:
    type: array
    items:
      $ref: '#/definitions/AwsSubnetInfo'

  AwsInstanceInfo:
    type: object
    properties:
      instanceId:
         type:  string
      instanceName:
         type:  string
      networkInfo:
        $ref: '#/definitions/NetworkInfo' 
      labels:
         $ref: '#/definitions/Labels'
      links:
        $ref: '#/definitions/Links' 
        

  ResourceStatusInformation:
    type: object
    properties:
      auditInfo:
        type: string
        format: dateTime
        $ref: '#/definitions/AuditInfo'
      healthStatusInfo:
        $ref: '#/definitions/HealthStatusInfo'
      stateInfo:
        $ref: '#/definitions/ResourceStateInfo'
      alertInfo:
        $ref: '#/definitions/AlertInfo'
      costInfo:
        $ref: '#/definitions/CostInfo'
        
  CostInfo:
    type: object
    properties: 
      costComparison:
        type:  object
        properties:
          day:
            type: object
            properties:
              thisWeeksCosts:
                $ref: '#/definitions/CostInfoDetails' 
              lastWeeksCosts:
                $ref: '#/definitions/CostInfoDetails' 
              costDifference:
                $ref: '#/definitions/CostInfoDetails' 
          week:
            type: object
            properties:
              thisWeeksCosts:
                $ref: '#/definitions/CostInfoDetails' 
              lastWeeksCosts:
                $ref: '#/definitions/CostInfoDetails' 
              costDifference:
                $ref: '#/definitions/CostInfoDetails' 
          month:
            type: object
            properties:
              thisWeeksCosts:
                $ref: '#/definitions/CostInfoDetails' 
              lastWeeksCosts:
                $ref: '#/definitions/CostInfoDetails' 
              costDifference:
                $ref: '#/definitions/CostInfoDetails' 
          year:
            type: object
            properties:
              thisWeeksCosts:
                $ref: '#/definitions/CostInfoDetails' 
              lastWeeksCosts:
                $ref: '#/definitions/CostInfoDetails' 
              costDifference:
                $ref: '#/definitions/CostInfoDetails' 
      yearToDateTotalCost:
        $ref: '#/definitions/CostInfoDetails'
      monthToDateTotalCost:
        $ref: '#/definitions/CostInfoDetails'
      yearToDateCostByMonth:
        type:  array
        items:
          type: object
          properties:
            month:
              type: string
              format: date
            cost:
              $ref: '#/definitions/CostInfoDetails' 
      yearToDateCostByWeek:
        type:  array
        items:
          type: object
          properties:
            week:
              type: string
              format: date
            cost:
              $ref: '#/definitions/CostInfoDetails'   
      monthToDateCostByWeek:
        type:  array
        items:
          type: object
          properties:
            month:
              type: string
              format: date
            cost:
              $ref: '#/definitions/CostInfoDetails'
      monthToDateCostByDay:
        type:  array
        items:
          type: object
          properties:
            day:
              type: string
              format: date
            cost:
              $ref: '#/definitions/CostInfoDetails'
      monthToDateCostByResourceByWeek:
        type:  array
        items:
          type: object
          properties:
            week:
              type: string
              format: date
            resourceTypeCosts:
              type:  array
              items:
                type: object
                properties:
                  resourceType:
                    type:  string
                  cost:
                    $ref: '#/definitions/CostInfoDetails'
            resourceCosts:
              type:  array
              items:
                type: object
                properties:
                  resourceId:
                    type:  string
                  resourceType:
                    type:  string
                  resourceName:
                    type:  string
                  cost:
                    $ref: '#/definitions/CostInfoDetails'
      monthToDateCostByResourceByDay:
        type:  array
        items:
          type: object
          properties:
            week:
              type: string
              format: date
            resourceTypeCosts:
              type:  array
              items:
                type: object
                properties:
                  resourceType:
                    type:  string
                  cost:
                    $ref: '#/definitions/CostInfoDetails'
            resourceCosts:
              type:  array
              items:
                type: object
                properties:
                  resourceId:
                    type:  string
                  resourceType:
                    type:  string
                  resourceName:
                    type:  string
                  cost:
                    $ref: '#/definitions/CostInfoDetails'

  CostInfoDetails: 
    type: object
    properties:
      costDateRange:
        type: object
        properties:
          startDateRange:
            type: string
            format: date-time
          endDateRange:
            type: string
            format: date-time
      totalSpendAmount:
        type: number
        format: double
      totalResourcesUsed:
        type: number
      resourceUsedType:
        type: string
        enum: ['hours-running', 'bytes-transfered', 'disk-space-stored']


  DockerSwarmNetworkList:
    type:  array
    items:
      type: object
      properties:
        dockerSwarmNetworkId:
          type: string
        dockerSwarmNetworkName:
          type:  string
        attachedApplicationGroups:
          type: array
          items:
            type: object
            properties:
              dockerApplicationGroupId:
                type:  string
              dockerApplicationGroupDisplayId:
                type:  string
              dockerApplicationGroupName:
                type:  string
              dockerApplicationGroupDisplayName:
                type:  string
              links:
                $ref: '#/definitions/Links'
        attachedApplications:
          type: array
          items:
            type: object
            properties:
              applicationId:
                type:  string
              applicationDisplayId:
                type:  string
              applicationName:
                type:  string
              applicationDisplayName:
                type:  string
              links:
                $ref: '#/definitions/Links'
        attachedApplicationServices:
          type: array
          items:
            type: object
            properties:
              dockerSwarmServiceId:
                type:  string
              dockerSwarmServiceDisplayId:
                type:  string
              dockerSwarmServiceName:
                type:  string
              links:
                $ref: '#/definitions/Links'
        links:
          $ref: '#/definitions/Links'