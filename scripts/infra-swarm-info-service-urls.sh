
DIR="$(cd "$(dirname "$0")" && pwd)"

source $DIR/setenv.sh

SCRIPT_NAME=`basename "$0"`

if [ -z "$1" ]
then
 $DIR/jra-util/jra-util-print-service-usage-info.sh $SCRIPT_NAME
 exit 1;	
fi

CLUSTER_NODE_INFO_STRING=$(infra-swarm-info-manager-node.sh info-only)

SWARM_MANAGER_NODE_IP="$(printf "$CLUSTER_NODE_INFO_STRING" | grep PublicIpAddress | cut -d ' ' -f2)"

SWARM_SERVICE_INSPECT_JSON=$(infra-swarm-info-service-inspect.sh $1)

declare -A FIELD_PORT_MAPPINGS

FIELD_DOMAIN="$(echo $SWARM_SERVICE_INSPECT_JSON | jq '.[0].Spec.Labels["jra.domain-name"]' | sed -e 's/^"//' -e 's/"$//')"
FIELD_PUBLIC_IP="$SWARM_MANAGER_NODE_IP"
FIELD_PRIVATE_IP="$(printf "$CLUSTER_NODE_INFO_STRING" | grep PrivateIpAddress | cut -d ' ' -f2)"
FIELD_PRIVATE_DNS_NAME="$(printf "$CLUSTER_NODE_INFO_STRING" | grep PrivateDnsName | cut -d ' ' -f2)"
FIELD_PUBLIC_DNS_NAME="$(printf "$CLUSTER_NODE_INFO_STRING" | grep PublicDnsName 	 | cut -d ' ' -f2)"
FIELD_DOCKER_NAME="$(echo $SWARM_SERVICE_INSPECT_JSON | jq '.[0].Spec.Name' | sed -e 's/^"//' -e 's/"$//')"

FIELD_PUBLIC_IP_URL=""
FIELD_PRIVATE_IP_URL=""
FIELD_PRIVATE_DNS_NAME_URL=""
FIELD_PUBLIC_DNS_NAME_URL=""
FIELD_INTERNAL_DOCKER_NETWORK_URL=""

CONST_DEFAULT_DOMAIN_PORT="80"

FIELD_SCHEME="http"
FIELD_DOMAIN_URL="$FIELD_SCHEME://$FIELD_DOMAIN"

NUM_OF_PORTS=$(echo $SWARM_SERVICE_INSPECT_JSON | jq '.[0].Endpoint.Ports | length')
	  
REPORT_STRING=" domain"
REPORT_STRING="$REPORT_STRING,$FIELD_DOMAIN_URL"
REPORT_STRING="$REPORT_STRING,$FIELD_DOMAIN"
REPORT_STRING="$REPORT_STRING,$CONST_DEFAULT_DOMAIN_PORT"

REPORT_STRING="$REPORT_STRING\n"

for ((i = 0 ; i < $NUM_OF_PORTS ; i++ )); do
	PORT_JSON=$(echo $SWARM_SERVICE_INSPECT_JSON | jq ".[0].Endpoint.Ports[$i] | {TargetPort: .TargetPort, PublishedPort: .PublishedPort}")

	FIELD_TARGET_PORT="$(echo $PORT_JSON | jq '.TargetPort')"
	FIELD_PUBLISH_PORT="$(echo $PORT_JSON | jq '.PublishedPort')"
	
	FIELD_PORT_MAPPINGS[$FIELD_TARGET_PORT]=$FIELD_PUBLISH_PORT
done

ROW_NUM=0
	
for i in "${!FIELD_PORT_MAPPINGS[@]}"; do
	
	FIELD_TARGET_PORT=$i
	FIELD_PUBLISH_PORT="${FIELD_PORT_MAPPINGS[$i]}"
	
	FIELD_URL_HOST_NAME=$FIELD_PUBLIC_IP
	FIELD_URL_PORT=$FIELD_PUBLISH_PORT
	
	FIELD_URL="$FIELD_SCHEME://$FIELD_URL_HOST_NAME:$FIELD_URL_PORT"
	
	FIELD_PUBLIC_IP_URL=$FIELD_URL

	if [ $ROW_NUM = "0" ]; then
	   FIELD_URL_TYPE="public-ip"
	else
	FIELD_URL_TYPE=" -"
	fi
	
	REPORT_STRING="$REPORT_STRING $FIELD_URL_TYPE"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_HOST_NAME"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_PORT"

	REPORT_STRING="$REPORT_STRING\n"
		
	((ROW_NUM++))
done

REPORT_STRING="$REPORT_STRING\n"

ROW_NUM=0
	
for i in "${!FIELD_PORT_MAPPINGS[@]}"; do
	
	FIELD_TARGET_PORT=$i
	FIELD_PUBLISH_PORT="${FIELD_PORT_MAPPINGS[$i]}"
	
	FIELD_URL_HOST_NAME=$FIELD_PUBLIC_DNS_NAME
	FIELD_URL_PORT=$FIELD_PUBLISH_PORT
	
	FIELD_URL="$FIELD_SCHEME://$FIELD_URL_HOST_NAME:$FIELD_URL_PORT"

	FIELD_PUBLIC_DNS_NAME_URL=$FIELD_URL

	if [ $ROW_NUM = "0" ]; then
	FIELD_URL_TYPE="public-dns-name"
	else
	FIELD_URL_TYPE=" -"
	fi
	
	REPORT_STRING="$REPORT_STRING $FIELD_URL_TYPE"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_HOST_NAME"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_PORT"

	REPORT_STRING="$REPORT_STRING\n"
		
	((ROW_NUM++))
done


ROW_NUM=0
	
for i in "${!FIELD_PORT_MAPPINGS[@]}"; do
	
	FIELD_TARGET_PORT=$i
	FIELD_PUBLISH_PORT="${FIELD_PORT_MAPPINGS[$i]}"
	
	FIELD_URL_HOST_NAME=$FIELD_PRIVATE_IP
	FIELD_URL_PORT=$FIELD_PUBLISH_PORT
	
	FIELD_URL="$FIELD_SCHEME://$FIELD_URL_HOST_NAME:$FIELD_URL_PORT"

	FIELD_PRIVATE_IP_URL=$FIELD_URL

	if [ $ROW_NUM = "0" ]; then
	FIELD_URL_TYPE="private-ip"
	else
	FIELD_URL_TYPE=" -"
	fi
	
	REPORT_STRING="$REPORT_STRING $FIELD_URL_TYPE"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_HOST_NAME"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_PORT"

	REPORT_STRING="$REPORT_STRING\n"
		
	((ROW_NUM++))
done

REPORT_STRING="$REPORT_STRING\n"

ROW_NUM=0
	
for i in "${!FIELD_PORT_MAPPINGS[@]}"; do
	
	FIELD_TARGET_PORT=$i
	FIELD_PUBLISH_PORT="${FIELD_PORT_MAPPINGS[$i]}"
	
	FIELD_URL_HOST_NAME=$FIELD_PRIVATE_DNS_NAME
	FIELD_URL_PORT=$FIELD_PUBLISH_PORT
	
	FIELD_URL="$FIELD_SCHEME://$FIELD_URL_HOST_NAME:$FIELD_URL_PORT"

	FIELD_PRIVATE_DNS_NAME_URL=$FIELD_URL

	if [ $ROW_NUM = "0" ]; then
	FIELD_URL_TYPE="private-dns-name"
	else
	FIELD_URL_TYPE=" -"
	fi
	
	REPORT_STRING="$REPORT_STRING $FIELD_URL_TYPE"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_HOST_NAME"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_PORT"

	REPORT_STRING="$REPORT_STRING\n"
		
	((ROW_NUM++))
done

ROW_NUM=0
	
for i in "${!FIELD_PORT_MAPPINGS[@]}"; do
	
	FIELD_TARGET_PORT=$i
	FIELD_PUBLISH_PORT="${FIELD_PORT_MAPPINGS[$i]}"
	
	FIELD_URL_HOST_NAME=$FIELD_DOCKER_NAME
	FIELD_URL_PORT=$FIELD_TARGET_PORT
	
	FIELD_URL="$FIELD_SCHEME://$FIELD_URL_HOST_NAME:$FIELD_URL_PORT"

	FIELD_INTERNAL_DOCKER_NETWORK_URL=$FIELD_URL

	if [ $ROW_NUM = "0" ]; then
	FIELD_URL_TYPE="internal-container-network"
	else
	FIELD_URL_TYPE=" -"
	fi
	
	REPORT_STRING="$REPORT_STRING $FIELD_URL_TYPE"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_HOST_NAME"
	REPORT_STRING="$REPORT_STRING,$FIELD_URL_PORT"

	REPORT_STRING="$REPORT_STRING\n"
		
	((ROW_NUM++))
done

#printf '%b\n' "SWARM_SERVICE_INSPECT_JSON = \n$SWARM_SERVICE_INSPECT_JSON"

#printf '%b\n' "\n\n<-------CLUSTER_NODE_INFO_STRING:  \n\n\"$CLUSTER_NODE_INFO_STRING\"\n\n"

#printf '%b\n' "\n\nFIELD_DOMAIN=$FIELD_DOMAIN" \
#"FIELD_DOMAIN_URL=$FIELD_DOMAIN_URL" \
#"FIELD_PUBLIC_IP=$FIELD_PUBLIC_IP" \
#"FIELD_PUBLIC_IP_URL=$FIELD_PUBLIC_IP_URL" \
#"FIELD_PRIVATE_IP=$FIELD_PRIVATE_IP" \
#"FIELD_PRIVATE_IP_URL=$FIELD_PRIVATE_IP_URL" \
#"FIELD_PUBLIC_DNS_NAME=$FIELD_PUBLIC_DNS_NAME" \
#"FIELD_PUBLIC_DNS_NAME_URL=$FIELD_PUBLIC_DNS_NAME_URL" \
#"FIELD_PRIVATE_DNS_NAME=$FIELD_PRIVATE_DNS_NAME" \
#"FIELD_PRIVATE_DNS_NAME_URL=$FIELD_PRIVATE_DNS_NAME_URL" \
#"FIELD_DOCKER_NAME=$FIELD_DOCKER_NAME" \
#"FIELD_INTERNAL_DOCKER_NETWORK_URL=$FIELD_INTERNAL_DOCKER_NETWORK_URL\n"


#echo +++++++++ 2 = $2

REPORT_STRING=" URL_TYPE,URL,HOST,PORT\n"$REPORT_STRING

if ! [ -z "$2" ]
then
	if [ $2 = "domain" ]; then
		echo $FIELD_DOMAIN_URL;
		exit 0;
	elif [ $2 = "public-dns" ]; then
		echo $FIELD_PUBLIC_DNS_NAME_URL;
		exit 0;
	elif [ $2 = "public-ip" ]; then
		echo $FIELD_PUBLIC_IP_URL;
		exit 0;
	elif [ $2 = "private-dns" ]; then
		echo $FIELD_PRIVATE_DNS_NAME_URL;
		exit 0;
	elif [ $2 = "private-ip" ]; then
		echo $FIELD_PRIVATE_IP_URL;
		exit 0;
	elif [ $2 = "internal-container" ]; then
		echo $FIELD_INTERNAL_DOCKER_NETWORK_URL;
		exit 0;
	else
		echo $FIELD_DOMAIN_URL;
		exit 0;
	fi
else
	printf '%b\n' ""
	printf '%b\n' "$REPORT_STRING" | column -t -s ','
fi
