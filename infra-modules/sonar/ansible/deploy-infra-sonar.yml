---
# determine the status of each manager node and break them
# into two groups:
#   - swarm_manager_operational (swarm is running and active)
#   - swarm_manager_bootstrap (host needs to be joined to the cluster)
- hosts: tag_jra_environment_{{ env }}:&tag_jra_swarm_instance_type_swarm_manager
  become: true
  tasks:
    - name: determine swarm status
      shell: >
        docker info | egrep '^Swarm: ' | cut -d ' ' -f2
      register: swarm_status

    - name: create swarm_manager_operational group
      add_host:
        hostname: "{{ item }}"
        groups: swarm_manager_operational
      with_items: "{{ ansible_play_hosts | default(play_hosts) }}"
      when: "'active' in hostvars[item].swarm_status.stdout_lines"
      run_once: true

    - name: create swarm_manager_bootstrap group
      add_host:
        hostname: "{{ item }}"
        groups: swarm_manager_bootstrap
      with_items: "{{ ansible_play_hosts | default(play_hosts) }}"
      when: "'active' not in hostvars[item].swarm_status.stdout_lines"
      run_once: true

# Create the sonar overlay network
- hosts: swarm_manager_operational[0]
  become: true
  tasks:
    - name: create sonar overlay network
      shell: >
        docker network create --driver=overlay jarch-infra-admin-sonar-network
      ignore_errors: yes


# Make sure the proper volume mount points are created on the infra-persistence node
- hosts: tag_jra_environment_{{ env }}:&tag_jra_swarm_node_type_infra_persistence
  become: true
  tasks:
    - name: create the Sonar mysql mount directory if it doesn't already exist
      shell: >
        sudo mkdir -p /usr/local/jra/docker-data-volumes/jra-infra/admin-sonar-db/data
      ignore_errors: yes

    - name: make sure the processes running inside containers have access to the directories
      shell: >
        sudo chmod -R 777 /usr/local/jra/docker-data-volumes
      ignore_errors: yes

# Deploy the sonar database
- hosts: swarm_manager_operational[0]
  become: true
  tasks:
    - name: remove the jarch-infra-admin-sonar-db service if it exists (ignore failure if it does not exist)
      shell: >
        docker service rm jarch-infra-admin-sonar-db
      ignore_errors: yes

    - name: deploy sonar db
      shell: >
        docker service create
        --name jarch-infra-admin-sonar-db
        --replicas=1
        --constraint 'node.labels.jra.swarm-node-type == infra-persistence'
        --network jarch-infra-admin-sonar-network
        --mount type=bind,src=/usr/local/jra/docker-data-volumes/jra-infra/admin-sonar-db/data,dst=/var/lib/mysql
        --label jra.environment-flip="blue"
        --label jra.application-name="jarch-infra-admin-sonar-db"
        --label jra.container-name="jarch-infra-admin-sonar-db"
        --env MYSQL_ROOT_PASSWORD=admin123
        --env MYSQL_DATABASE=sonar
        --env MYSQL_USER=sonar
        --env MYSQL_PASSWORD=admin123
        mysql

# Make sure the proper volume mount points are created on all the swarm manager nodes
- hosts: tag_jra_environment_{{ env }}:&tag_jra_swarm_node_type_infra_repos
  become: true
  tasks:
    - name: create the sonar mount directory if it doesn't already exist
      shell: >
        sudo mkdir -p /usr/local/jra/docker-data-volumes/jra-infra/build-sonar/home
      ignore_errors: yes

    - name: make sure the processes running inside containers have access to the directories
      shell: >
        sudo chmod -R 777 /usr/local/jra/docker-data-volumes
      ignore_errors: yes

# Deploy the sonar service
- hosts: swarm_manager_operational[0]
  become: true
  tasks:
    - name: remove the jarch-infra-admin-sonar-ui service if it exists (ignore failure if it does not exist)
      shell: >
        docker service rm jarch-infra-admin-sonar-ui
      ignore_errors: yes

    - name: deploy sonar service
      shell: >
        docker service create
        --name jarch-infra-admin-sonar-ui
        --publish 8194:9000
        --publish 8200:9092
        --replicas=1
        --constraint 'node.labels.jra.swarm-node-type == infra-repos'
        --network jarch-infra-global-network-proxy-admin
        --network jarch-infra-admin-sonar-network
        --mount type=bind,src=/usr/local/jra/docker-data-volumes/jra-infra/build-sonar/home,dst=/opt/sonarqube/data
        --label traefik.docker.network=jarch-infra-global-network-proxy-admin
        --label traefik.port=9000
        --label traefik.frontend.rule=Host:{{ env_domain_prefix }}sonar.joericearchitect.com
        --label jra.environment-flip="blue"
        --label jra.application-name="jarch-infra-admin-sonar-ui"
        --label jra.container-name="jarch-infra-admin-sonar-ui"
        --label jra.domain-name={{ env_domain_prefix }}sonar.joericearchitect.com
        --env SONARQUBE_JDBC_USERNAME=sonar
        --env SONARQUBE_JDBC_PASSWORD=admin123
        --env SONARQUBE_JDBC_URL="jdbc:mysql://jarch-infra-admin-sonar-db:3306/sonar?useUnicode=true&characterEncoding=utf8"
        sonarqube


